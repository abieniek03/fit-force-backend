// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SEX {
  male
  female
}

model MyParameters {
  id        String   @id @unique @default(uuid())
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
  sex       SEX
  birthDate DateTime
  height    Int

  @@map("my-parameters")
}

model TrainingCamp {
  id             String             @id @unique @default(uuid())
  userId         String
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @default(now()) @updatedAt()
  title          String
  startDate      DateTime
  endDate        DateTime
  weightProgress Weight[]
  meansurement   BodyMeansurement[]

  @@map("training-camps")
}

model Weight {
  id           String        @id @unique @default(uuid())
  userId       String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt()
  date         DateTime
  weight       Float
  campId       String?
  TrainingCamp TrainingCamp? @relation(fields: [campId], references: [id])

  @@map("weights")
}

model BodyMeansurement {
  id           String        @id @unique @default(uuid())
  userId       String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now()) @updatedAt()
  date         DateTime
  chest        Float
  waist        Float
  belly        Float
  arm          Float
  hips         Float
  thigh        Float
  calf         Float
  campId       String?
  TrainingCamp TrainingCamp? @relation(fields: [campId], references: [id])

  @@map("body-meansurements")
}
